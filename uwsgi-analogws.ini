[uwsgi]
uid = cds
gid = cds
plugins = python36

pythonpath = /home/cds/analogues
chdir = /home/cds/analogues/webapps

touch-reload=/home/cds/analogues/webapps/analogws.py


; http://uwsgi-docs.readthedocs.io/en/latest/StaticFiles.html
socket = :7998
stats = 127.0.0.1:1716
daemonize = /var/log/cds/uwsgi-analogws.log

; master = 1
; workers = 20
; module = analogues.analogues
; https://stackoverflow.com/questions/34252892/using-flask-sqlalchemy-in-multiple-uwsgi-processes
; lazy-apps = true
; callable = application

; http://uwsgi-docs.readthedocs.io/en/latest/Snippets.html

http-websockets = true


master = true

; https://uwsgi-docs.readthedocs.io/en/latest/Cheaper.html?highlight=memory#setting-memory-limits
# set cheaper algorithm to use, if not set default will be used
cheaper-algo = spare

# minimum number of workers to keep at all times
cheaper = 2

# number of workers to spawn at startup
cheaper-initial = 5

# maximum number of workers that can be spawned
workers = 500

# how many workers should be spawned at a time
cheaper-step = 1

# soft limit will prevent cheaper from spawning new workers
# if workers total rss memory is equal or higher
cheaper-rss-limit-soft = 6000000000
memory-report = true
# hard limit will force cheaper to cheap single worker
# if workers total rss memory is equal or higher
cheaper-rss-limit-hard = 8000000000

mount = /analogws=analogws.py
manage-script-name = true

debug = true
log-level = DEBUG

;;
env=ANALOGUES_HOME=/home/cds/analogues
env=ANALOGUES_DATA=/cache/analogues
env=ANALOGUES_CACHE=/cache/data
